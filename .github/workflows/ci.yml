name: Worker CI

on:
  push:
    tags:
      - prod-*
    branches:
      - main
      - staging
  pull_request:

permissions:
  contents: 'read'
  id-token: 'write'

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true


jobs:
  lint:
    name: Run Lint
    uses: codecov/gha-workflows/.github/workflows/lint.yml@v1.2.12

  build:
    name: Build Worker
    uses: codecov/gha-workflows/.github/workflows/build-app.yml@v1.2.12
    secrets: inherit
    with:
      repo: ${{ vars.CODECOV_IMAGE_V2 || 'codecov/self-hosted-worker' }}

  test:
    name: Test
    needs: [build]
    runs-on: ubuntu-latest
    env:
      AR_REPO: ${{ vars.CODECOV_IMAGE_V2 || 'codecov/self-hosted-worker' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Cache App
        id: cache-app
        uses: actions/cache@v3
        env:
          cache-name: cache-app
        with:
          path: |
            app.tar
          key: ${{ runner.os }}-${{ env.cache-name }}-${{ github.run_id }}
      - name: Load built image
        run: |
          docker load --input app.tar
      - name: Install docker compose
        run: |
          sudo curl -SL https://github.com/docker/compose/releases/download/v2.20.0/docker-compose-linux-x86_64 -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
      - name: deps
        run: |
          apt-get update
          apt-get install openssh-client
      - name: Bring test env up
        run: |
          make test_env.up
      - name: Prepare for tests
        run: |
          make test_env.prepare
          make test_env.check_db
      - name: Run unit tests
        run: |
          make test_env.run_unit
      - name: Run integration tests
        if: inputs.run_integration == true
        run: |
          make test_env.run_integration
      ## Don't upload on forks for now.
      - name: upload using codecovcli
        run: |
          make test_env.upload CODECOV_UPLOAD_TOKEN=${{ secrets.CODECOV_ORG_TOKEN }} CODECOV_URL=${{ secrets.CODECOV_URL }}
